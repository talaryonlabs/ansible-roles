---
- name: Pulling image version={{ caddy_tag }}
  community.docker.docker_image_pull:
    name: "{{ caddy_image }}:{{ caddy_tag }}"
    pull: not_present

- name: Create network proxy
  community.docker.docker_network:
    name: proxy
    state: present
    internal: false

- name: Check if directory exists
  stat:
    path: ./caddy/config/sites/
  register: main_directory

- name: Prepare main directory
  ansible.builtin.file:
    path: ./caddy/config/sites/
    state: directory
    owner: optiwi
    recurse: yes
  when: not main_directory.stat.exists

- name: Copy Caddyfile
  ansible.builtin.copy:
    src: "{{ caddy_file }}"
    dest: ./caddy/Caddyfile
    owner: optiwi
    mode: '0644'
  when: caddy_file | default('', true) | trim != ''
    
- name: Copy sites
  ansible.builtin.copy:
    src: "{{ item.value }}"
    dest: "./caddy/config/sites/{{ item.key }}"
    owner: optiwi
    mode: '0644'
  loop: "{{ caddy_sites | dict2items }}"

- name: Running Caddy
  community.docker.docker_container:
    name: caddy
    hostname: caddy
    image: "{{ caddy_image }}:{{ caddy_tag }}"
    restart_policy: unless-stopped
    volumes:
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - 80:80
      - 443:443
    networks:
      - name: proxy

- name: Check if container is running
  community.docker.docker_container_info:
    name: caddy
  register: result

- name: Reload config file
  community.docker.docker_container_exec:
    container: caddy
    command: caddy reload -c /etc/caddy/Caddyfile
  when: result.container['State']['Status'] == "running"